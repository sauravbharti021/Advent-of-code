
import math
import collections

from queue import Queue


path = "input.txt"

s="" 
try:
    with open(path) as file:
        s=(file.read())
except Exception as e:
    print(e)

arr=[]
arr= s.split('\n')

print(arr)

n= len(arr)
m= len(arr[0])

x=-1
y=-1

dir=[[0,-1], [1,0], [0,1],[-1,0]]



for i in range(len(arr)):
    for j in range(len(arr[i])):
        if(arr[i][j]=='S'):
            x=i;
            y=j;
            break

dic= dict()

q = collections.deque()

# q.append(((x,y), 0))

dis= [[10000000]*m for _ in range(n)]
dis[x][y]=0

if(x-1>=0 and arr[x-1][y] in ('|', 'F', '7')):
    q.append(((x-1,y), 1))
if(x+1<n and arr[x+1][y] in ('|', 'L', 'J')):
    q.append(((x+1, y), 1))
if(y-1>=0 and arr[x][y-1] in ('-', 'L', 'F')):
    q.append(((x, y-1), 1))
if(y+1<m and arr[x][y+1] in ('-', 'J', '7')):
    q.append(((x, y+1), 1))

ans=-1;
flag=False



while len(q)>0:
    
    (u,v ), far= q.popleft()

    # print(u, v)
    if((u, v) in dic or arr[u][v]=='.' or (u==x and v==y) or (u<0 or v<0 or u>=n or v>=m)):
            continue
    else:
        dic[(u, v)]=1
        dis[u][v]=far

    
    if(arr[u][v]=='L'):
        q.append(((u-1, v), far+1))
        q.append(((u, v+1), far+1))
    if(arr[u][v]=='J'):
        q.append(((u-1, v), far+1))
        q.append(((u, v-1), far+1))
    if(arr[u][v]=='F'):
        q.append(((u+1, v), far+1))
        q.append(((u, v+1), far+1))
    if(arr[u][v]=='7'):
        q.append(((u+1, v), far+1))
        q.append(((u, v-1), far+1))
    if(arr[u][v]=='|'):
        q.append(((u-1, v), far+1))
        q.append(((u+1, v), far+1))
    if(arr[u][v]=='-'):
        q.append(((u, v-1), far+1))
        q.append(((u, v+1), far+1))

    

mx=0
for i in dis:
    print(i)

    print()

for i in dis:
    for j in i:
        if(j!=10000000):
            mx=max(mx, j)

ans= mx

print(ans)


